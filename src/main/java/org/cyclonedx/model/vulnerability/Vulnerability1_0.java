/*
 * This file is part of CycloneDX Core (Java).
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * SPDX-License-Identifier: Apache-2.0
 * Copyright (c) Steve Springett. All Rights Reserved.
 */
package org.cyclonedx.model.vulnerability;

import java.net.URL;
import java.util.EnumMap;
import java.util.List;
import java.io.Serializable;

import com.google.gson.annotations.SerializedName;
import jakarta.xml.bind.annotation.XmlAttribute;
import jakarta.xml.bind.annotation.XmlElement;
import jakarta.xml.bind.annotation.XmlRootElement;

import com.thoughtworks.xstream.annotations.XStreamAlias;
import com.thoughtworks.xstream.annotations.XStreamAsAttribute;
import com.thoughtworks.xstream.annotations.XStreamConverter;
import com.thoughtworks.xstream.annotations.XStreamImplicit;
import com.thoughtworks.xstream.converters.enums.EnumToStringConverter;
import com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter;
import org.cyclonedx.model.ExtensibleType;

public class Vulnerability1_0
    extends ExtensibleType implements Serializable
{
  public static final String NAMESPACE_URI = "http://cyclonedx.org/schema/ext/vulnerability/1.0";
  public static final String PREFIX = "v";
  public static final String NAME = "vulnerability";

  public Vulnerability1_0() {
    super(PREFIX, NAME);
  }

  public Vulnerability1_0(final String namespace, final String name) {
    super(namespace, name);
  }

  @XStreamConverter(EnumToStringConverter.class)
  public enum Severity {
    NONE, LOW, MEDIUM, HIGH, CRITICAL, UNKNOWN;

    private final static EnumMap<Severity, String> severities;

    static {
      severities = new EnumMap<>(Severity.class);
      severities.put(NONE, "None");
      severities.put(LOW, "Low");
      severities.put(MEDIUM, "Medium");
      severities.put(HIGH, "High");
      severities.put(CRITICAL, "Critical");
      severities.put(UNKNOWN, "Unknown");
    }

    @Override
    public String toString() {
      return severities.get(this);
    }
  }

  @XStreamConverter(EnumToStringConverter.class)
  public enum ScoreSource {
    CVSSv3, CVSSv2, OWASP, FAIR, OTHER;

    private final static EnumMap<ScoreSource, String> sources;

    static {
      sources = new EnumMap<>(ScoreSource.class);
      sources.put(CVSSv3, "CVSSv3");
      sources.put(CVSSv2, "CVSSv2");
      sources.put(OWASP, "OWASP Risk");
      sources.put(FAIR, "Open FAIR");
      sources.put(OTHER, "Other");
    }

    @Override
    public String toString() {
      return sources.get(this);
    }
  }

    private String id;
    @XStreamAsAttribute
    private String ref;
    @XStreamImplicit
    private List<Source> source;
    private List<Rating> ratings;
    private List<Cwe> cwes;
    private String description;
    private List<Recommendation> recommendations;
    private List<Advisory> advisories;

    @XmlElement(name = "advisories", namespace = NAMESPACE_URI)
    public List<Advisory> getAdvisories() {
      return advisories;
    }

    public void setAdvisories(final List<Advisory> advisories) {
      this.advisories = advisories;
    }

    @XmlElement(name = "recommendations", namespace = NAMESPACE_URI)
    public List<Recommendation> getRecommendations() {
      return recommendations;
    }

    public void setRecommendations(final List<Recommendation> recommendations) {
      this.recommendations = recommendations;
    }

    @XmlElement(name = "description", namespace = NAMESPACE_URI)
    public String getDescription() {
      return description;
    }

    public void setDescription(final String description) {
      this.description = description;
    }

    @XmlElement(name = "cwes", namespace = NAMESPACE_URI)
    public List<Cwe> getCwes() {
      return cwes;
    }

    public void setCwes(final List<Cwe> cwes) {
      this.cwes = cwes;
    }

    @XmlElement(name = "ratings", namespace = NAMESPACE_URI)
    public List<Rating> getRatings() {
      return ratings;
    }

    public void setRatings(final List<Rating> ratings) {
      this.ratings = ratings;
    }

    @XmlElement(name = "source", namespace = NAMESPACE_URI)
    public List<Source> getSource() {
      return source;
    }

    public void setSource(final List<Source> source) {
      this.source = source;
    }

    @XmlAttribute(name = "ref")
    public String getRef() {
      return ref;
    }

    public void setRef(final String ref) {
      this.ref = ref;
    }

    @XmlElement(name = "id", namespace = NAMESPACE_URI)
    public String getId() {
      return id;
    }

    public void setId(final String id) {
      this.id = id;
    }

    @XStreamConverter(value= ToAttributedValueConverter.class, strings={"url"})
    @XmlRootElement(name = "source", namespace = NAMESPACE_URI)
    public static class Source {
      private String name;
      private List<URL> url;

      @XmlElement(name = "url", namespace = NAMESPACE_URI)
      public List<URL> getUrl() {
        return url;
      }

      public void setUrl(final List<URL> url) {
        this.url = url;
      }

      @XmlElement(name = "name", namespace = NAMESPACE_URI)
      public String getName() {
        return name;
      }

      public void setName(final String name) {
        this.name = name;
      }
    }

    @XStreamAlias("rating")
    public static class Rating {
      private Score score;
      private Severity severity;
      private ScoreSource method;
      private String vector;

      @XmlElement(name = "score", namespace = NAMESPACE_URI)
      public Score getScore() {
        return score;
      }

      public void setScore(final Score score) {
        this.score = score;
      }

      @XmlElement(name = "severity", namespace = NAMESPACE_URI)
      public Severity getSeverity() {
        return severity;
      }

      public void setSeverity(final Severity severity) {
        this.severity = severity;
      }

      @XmlElement(name = "method", namespace = NAMESPACE_URI)
      public ScoreSource getMethod() {
        return method;
      }

      public void setMethod(final ScoreSource method) {
        this.method = method;
      }

      @XmlElement(name = "vector", namespace = NAMESPACE_URI)
      public String getVector() {
        return vector;
      }

      public void setVector(final String vector) {
        this.vector = vector;
      }
    }

    @XStreamAlias("score")
    public static class Score {
      private Double base;
      private Double impact;
      private Double exploitability;

      @XmlElement(name = "base", namespace = NAMESPACE_URI)
      public Double getBase() {
        return base;
      }

      public void setBase(final Double base) {
        this.base = base;
      }

      @XmlElement(name = "impact", namespace = NAMESPACE_URI)
      public Double getImpact() {
        return impact;
      }

      public void setImpact(final Double impact) {
        this.impact = impact;
      }

      @XmlElement(name = "exploitability", namespace = NAMESPACE_URI)
      public Double getExploitability() {
        return exploitability;
      }

      public void setExploitability(final Double exploitability) {
        this.exploitability = exploitability;
      }
    }

    @XStreamAlias("cwe")
    @XStreamConverter(value= ToAttributedValueConverter.class, strings={"text"})
    public static class Cwe {
      @SerializedName("cwe")
      private Integer text;

      @XmlElement(name = "cwe", namespace = NAMESPACE_URI)
      public Integer getText() {
        return text;
      }

      public void setText(final Integer text) {
        this.text = text;
      }
    }

    @XStreamAlias("advisory")
    @XStreamConverter(value= ToAttributedValueConverter.class, strings={"text"})
    public static class Advisory {
      @SerializedName("advisory")
      private String text;

      @XmlElement(name = "advisory", namespace = NAMESPACE_URI)
      public String getText() {
        return text;
      }

      public void setText(final String text) {
        this.text = text;
      }
    }

    @XStreamAlias("recommendation")
    @XStreamConverter(value= ToAttributedValueConverter.class, strings={"text"})
    public static class Recommendation {
      @SerializedName("recommendation")
      private String text;

      @XmlElement(name = "recommendation", namespace = NAMESPACE_URI)
      public String getText() {
        return text;
      }

      public void setText(final String text) {
        this.text = text;
      }
    }
}

